{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","todoList","modifyTodoList","inputText","setInputText","value","onChange","e","target","placeholder","onClick","preventDefault","length","text","complete","id","Math","random","Todo","todo","className","style","textDecoration","modifiedTodoList","map","item","filter","TodoList","App","useState","useEffect","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","console","log","getItem","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNA+BeA,EA7BF,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAqBnD,OACE,iCACE,uBAAOC,MAAOF,EAAWG,SAtBJ,SAACC,GACxBH,EAAaG,EAAEC,OAAOH,QAqBiCI,YAAY,cACjE,wBAAQC,QAnBc,SAACH,GACzBA,EAAEI,iBACER,EAAUS,OAAS,IAGvBV,EAAe,GAAD,mBACTD,GADS,CAEZ,CACEY,KAAMV,EACNW,UAAU,EACVC,GAAoB,IAAhBC,KAAKC,aAGbb,EAAa,MAMX,0BCWSc,EAnCF,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMlB,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAgB9B,OACE,+BACE,qBACEkB,UAAU,OACVC,MAAO,CACLC,eAAgBH,EAAKL,SAAW,eAAiB,QAHrD,SAKGK,EAAKN,OAER,wBAAQO,UAAU,eAAeV,QAxBb,SAACH,GACvB,IAAMgB,EAAgB,YAAOtB,GAC7BsB,EAAiBC,KAAI,SAACC,GACpB,GAAIA,EAAKV,KAAOI,EAAKJ,GAGnB,OAFAU,EAAKX,UAAYW,EAAKX,cACtBZ,EAAeqB,OAmBjB,SACGJ,EAAKL,SAAW,SAAW,aAE9B,wBAAQM,UAAU,aAAaV,QAhBT,SAACH,GACzBL,EAAeD,EAASyB,QAAO,SAACD,GAAD,OAAUA,EAAKV,KAAOI,EAAKJ,QAexD,wBCjBSY,EAVE,SAAC,GAAkC,IAAhC1B,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAC5B,OACE,6BACGD,EAASuB,KAAI,SAACL,GAAD,OACZ,cAAC,EAAD,CAAoBA,KAAMA,EAAMlB,SAAUA,EAAUC,eAAgBA,GAAzDiB,EAAKJ,UCuCTa,MAzCf,WACE,MAAmCC,mBAAS,IAA5C,mBAAO5B,EAAP,KAAiBC,EAAjB,KACA,EAAkC2B,mBAAS,IAA3C,mBAAO1B,EAAP,KAAkBC,EAAlB,KAEA0B,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,MACC,CAAC/B,IAEJ,IAAM+B,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUnC,KAGzC8B,EAAgB,WACpBM,QAAQC,IAAI,gBAC0B,OAAlCL,aAAaM,QAAQ,SACvBN,aAAaC,QAAQ,QAASC,KAAKC,UAAU,KAE7ClC,EAAeiC,KAAKK,MAAMP,aAAaM,QAAQ,YAInD,OACE,sBAAKnB,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,6CAEF,cAAC,EAAD,CACEnB,SAAUA,EACVC,eAAgBA,EAChBC,UAAWA,EACXC,aAAcA,IAEhB,cAAC,EAAD,CAAUH,SAAUA,EAAUC,eAAgBA,QC7BrCuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.543bffe3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ todoList, modifyTodoList, inputText, setInputText }) => {\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const todoSubmitHandler = (e) => {\n    e.preventDefault();\n    if (inputText.length < 1) {\n      return;\n    }\n    modifyTodoList([\n      ...todoList,\n      {\n        text: inputText,\n        complete: false,\n        id: Math.random() * 1000,\n      },\n    ]);\n    setInputText(\"\");\n  };\n\n  return (\n    <form>\n      <input value={inputText} onChange={inputTextHandler} placeholder=\"Task Name\"></input>\n      <button onClick={todoSubmitHandler}>Add Todo</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\n\nconst Todo = ({ todo, todoList, modifyTodoList }) => {\n  const completeHandler = (e) => {\n    const modifiedTodoList = [...todoList];\n    modifiedTodoList.map((item) => {\n      if (item.id === todo.id) {\n        item.complete = !item.complete;\n        modifyTodoList(modifiedTodoList);\n        return;\n      }\n    });\n  };\n\n  const deleteTodoHandler = (e) => {\n    modifyTodoList(todoList.filter((item) => item.id !== todo.id));\n  };\n\n  return (\n    <li>\n      <div\n        className='todo'\n        style={{\n          textDecoration: todo.complete ? \"line-through\" : \"none\",\n        }}>\n        {todo.text}\n      </div>\n      <button className='complete-btn' onClick={completeHandler}>\n        {todo.complete ? \"Unmark\" : \"Complete\"}\n      </button>\n      <button className='delete-btn' onClick={deleteTodoHandler}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todoList, modifyTodoList }) => {\n  return (\n    <ul>\n      {todoList.map((todo) => (\n        <Todo key={todo.id} todo={todo} todoList={todoList} modifyTodoList={modifyTodoList} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import \"./App.css\";\nimport react, { useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [todoList, modifyTodoList] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    saveLocalTodos();\n  }, [todoList]);\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todoList));\n  };\n\n  const getLocalTodos = () => {\n    console.log(\"breakpoint 2\");\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      modifyTodoList(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n  };\n\n  return (\n    <div className='App'>\n      <header className=\"Header\">\n        <h1>Todo List</h1>\n      </header>\n      <Form\n        todoList={todoList}\n        modifyTodoList={modifyTodoList}\n        inputText={inputText}\n        setInputText={setInputText}\n      />\n      <TodoList todoList={todoList} modifyTodoList={modifyTodoList} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}